(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{319:function(a,t,s){"use strict";s.r(t);var e=s(7),l=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"红黑树"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#红黑树"}},[a._v("#")]),a._v(" 红黑树")]),a._v(" "),t("blockquote",[t("p",[a._v("红黑树演示 -> "),t("a",{attrs:{href:"https://www.cs.usfca.edu/~galles/visualization/RedBlack.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Red/Black Tree Visualization"),t("OutboundLink")],1)])]),a._v(" "),t("h2",{attrs:{id:"_1-定义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-定义"}},[a._v("#")]),a._v(" 1. 定义")]),a._v(" "),t("ol",[t("li",[a._v("节点是红色或黑色")]),a._v(" "),t("li",[a._v("根节点是黑色")]),a._v(" "),t("li",[a._v("所有叶子节点都是黑色 (叶子是 NIL 节点)")]),a._v(" "),t("li",[a._v("不存在两个相邻的红节点 (即红节点的父节点和孩子节点均是黑色)")]),a._v(" "),t("li",[a._v("对每个节点，从该节点到任一叶子节点的简单路径上，所含黑节点的数目相同")])]),a._v(" "),t("div",{staticClass:"language-ad-important line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("**口诀：左根右，根叶黑，不红红，黑路同**\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("h2",{attrs:{id:"_2-插入操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-插入操作"}},[a._v("#")]),a._v(" 2. 插入操作")]),a._v(" "),t("ul",[t("li",[a._v("先查找，确定插入位置，插入新节点")]),a._v(" "),t("li",[a._v("新节点是根 --\x3e 染为黑色")]),a._v(" "),t("li",[a._v("新节点非根 --\x3e 染为红色\n"),t("ul",[t("li",[a._v("若插入新节点后任然满足红黑树定义，则插入结束")]),a._v(" "),t("li",[a._v("若插入新节点后不满足红黑树定义，需要调整 (看新节点叔叔的脸色)，使其重新满足红黑树定义\n"),t("ul",[t("li",[a._v("黑叔：旋转 + 染色\n"),t("ul",[t("li",[a._v("LL 型：右旋，父换爷 + 染色 (黑变红，红变黑)")]),a._v(" "),t("li",[a._v("RR 型：左旋，父换爷 + 染色")]),a._v(" "),t("li",[a._v("LR 型：先左旋后右旋，儿换爷 + 染色")]),a._v(" "),t("li",[a._v("RL 型：先右旋后左旋，儿换爷 + 染色")])])]),a._v(" "),t("li",[a._v("红叔：染色 + 变新 => 叔父爷染色，爷变为新节点")])])])])])]),a._v(" "),t("div",{staticClass:"language-ad-important line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("- 为根染黑，非根染红，非根只关注不红红\n- 若插入后任为红黑树，则成功\n- 若不对，则调整\n\t- 黑叔\n\t\t- LL、RR -> 父单旋，父爷换色\n\t\t- RL、LR -> 孙双旋、孙爷换色\n\t- 红叔：叔父爷换色，爷为新\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br")])]),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"image-20221109015908895","data-src":"https://fastly.jsdelivr.net/gh/xihuanxiaorang/images/202211090159491.png",loading:"lazy"}})])])}),[],!1,null,null,null);t.default=l.exports}}]);